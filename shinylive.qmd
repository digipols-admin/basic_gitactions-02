---
title: "Shinylive Example 03"
format: html
---

## Interactive Scatter Plot with Shinylive

This is an example of a Shinylive application embedded in a Quarto document.

```{shinylive-r}
#| standalone: true
#| viewerHeight: 600

library(shiny)
library(ggplot2)
library(bslib)

# Create synthetic data
set.seed(123)
n <- 100
synthetic_data <- data.frame(
  x = rnorm(n),
  y = rnorm(n),
  group = sample(LETTERS[1:3], n, replace = TRUE)
)

ui <- page_sidebar(
  title = "Interactive Scatter Plot",
  sidebar = sidebar(
    selectInput("color_var", "Color By:", 
                choices = c("None", "Group"), 
                selected = "None"),
    sliderInput("point_size", "Point Size:",
                min = 1, max = 10, value = 3),
    sliderInput("point_alpha", "Point Transparency:",
                min = 0.1, max = 1, value = 0.7),
    checkboxInput("add_smooth", "Add Smoothed Line", FALSE),
    hr(),
    downloadButton("download_plot", "Download Plot")
  ),
  
  card(
    card_header("Scatter Plot"),
    plotOutput("scatter_plot"),
    card_footer("Synthetic data with random normal distributions")
  ),
  
  card(
    card_header("Data Summary"),
    verbatimTextOutput("data_summary")
  )
)

server <- function(input, output, session) {
  # Reactive plot
  output$scatter_plot <- renderPlot({
    p <- ggplot(synthetic_data, aes(x = x, y = y)) +
      theme_minimal() +
      labs(
        title = "Synthetic Data Visualization",
        x = "X Variable",
        y = "Y Variable"
      )
    
    # Add color by group if selected
    if (input$color_var == "Group") {
      p <- p + aes(color = group)
    }
    
    # Add points with user-selected size and transparency
    p <- p + geom_point(size = input$point_size, alpha = input$point_alpha)
    
    # Add smooth line if requested
    if (input$add_smooth) {
      p <- p + geom_smooth(method = "loess", se = TRUE)
    }
    
    p
  })
  
  # Data summary
  output$data_summary <- renderPrint({
    summary(synthetic_data)
  })
  
  # Download handler
  output$download_plot <- downloadHandler(
    filename = function() {
      "scatter_plot.png"
    },
    content = function(file) {
      # Create the plot
      p <- ggplot(synthetic_data, aes(x = x, y = y)) +
        theme_minimal() +
        labs(
          title = "Synthetic Data Visualization",
          x = "X Variable",
          y = "Y Variable"
        )
      
      if (input$color_var == "Group") {
        p <- p + aes(color = group)
      }
      
      p <- p + geom_point(size = input$point_size, alpha = input$point_alpha)
      
      if (input$add_smooth) {
        p <- p + geom_smooth(method = "loess", se = TRUE)
      }
      
      # Save the plot
      ggsave(file, plot = p, width = 8, height = 6, dpi = 300)
    }
  )
}

shinyApp(ui, server)
```

